github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
jtleek <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(jtleek)
gtoken <- config(token = github_token)
jtleek <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(jtleek)
install.packages(httpuv)
install.packages("httpuv")
load(httpuv)
library(httpuv)
library(httr)
oauth_endpoints("github")
p
p
myapp <- oauth_app("githubreader",
key = "0cb1c3a5fe148e3fe7e0",
secret = "d5ed6393ef6954552a9aa2c64837b680214f1b24")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
# Checking the OAuth settings for github
oauth_endpoints("github")
# Creating the access of myapp
myapp <- oauth_app("githubreader",
key = "0cb1c3a5fe148e3fe7e0",
secret = "d5ed6393ef6954552a9aa2c64837b680214f1b24")
# Get OAuth credentials and github token:
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
swirl()
library(swirl)
swirl()
Sys.getlocale(category = "LC_ALL")
Sys.getlocale(category = "LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
day()
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours=4, minutes = 34)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours= 17, minutes= 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008" tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
psi <- c(392, 758, 267, 199, 429, 1394, 45, 51, 406, 114, 127, 376, 183, 1, 258, 180, 632, 380, 47)
solid <- c(389, 528, 248, 570, 471, 509, 824, 139, 23, 347, 78, 64, 91, 1069, 268, 1)
boxplot(psi)
boxplot(solid)
boxplot(c(solid, psi))
boxplot(psi~solid)
vend1 <- c(600, 437, 202, 437, 404, 398, 363, 79, 141, 304, 164, 505, 420, 88)
vend2 <- c(15, 64, 98, 62, 401, 293, 294, 111, 90, 401, 214, 471, 27, 902, 401, 744, 0)
vend3 <- c(575, 504, 494, 490, 393, 487, 501, 293, 305, 404, 101, 297, 463, 505, 513)
summary(vend1)
summary(vend2)
summary(vend3)
IQR(vend1)
boxplot(vend1)
group.data <- c(vend1, vend2, vend3)
bxplot(group.data)
boxplot(group.data)
boxplot(vend2)
boxplot(vend3)
group.data <- melt(c(vend1, vend2, vend3))
require(reshape2)
group.data <- melt(c(vend1, vend2, vend3))
group.data
rm group.data
ls()
View(group.data)
View(group.data)
group.data <- data.frame(vend1 = vend1, vend2 = vend2, vend3 = vend3)
group.data <- data.frame(vend1, vend2, vend3)
group.data <- rbind(vend1, vend2, vend3)
group.data
group.data <- cbind(vend1, vend2, vend3)
group.data
require(gtools)
require(dplyr)
bind_columns(vend1, vend2, vend3)
bind_rows(vend1, vend2, vend3)
require(plyr)
cbind.fill <- c(vend1, vend2, vend3)
vend1 <- c(600, 437, 202, 437, 404, 398, 363, 79, 141, 304, 164, 505, 420, 88)
vend2 <- c(15, 64, 98, 62, 401, 293, 294, 111, 90, 401, 214, 471, 27, 902, 401, 744, 0)
vend3 <- c(575, 504, 494, 490, 393, 487, 501, 293, 305, 404, 101, 297, 463, 505, 513)
df <- rbind.fill(vend1, vend2, vend3)
vend1 <- data.frame( vend1 = vend1)
vend1
vend2 <- data.frame( vend2 = vend2)
vend3 <- data.frame( vend3 = vend3)
df <- data.frame(vend1, vend2, vend3)
require(plyr)
df <- rbind.fill(vend1, vend2, vend3)
df
df <- cbind.fill(vend1, vend2, vend3)
vend1 <- rep(NA, 2)
vend1 <- c(c(600, 437, 202, 437, 404, 398, 363, 79, 141, 304, 164, 505, 420, 88), rep(NA, 2))
vend1
vend2 <- c(vend2, rep(NA, 2))
vend2
vend2 <- c(15  64  98  62 401 293 294 111  90 401 214 471  27 902 401 744   0)
vend2 <- c(15, 64, 98, 62, 401, 293, 294, 111, 90, 401, 214, 471, 27, 902, 401, 744, 0)
vend1 <- c(600, 437, 202, 437, 404, 398, 363, 79, 141, 304, 164, 505, 420, 88)
vend3 <- c(575, 504, 494, 490, 393, 487, 501, 293, 305, 404, 101, 297, 463, 505, 513)
vend2 <- c(15, 64, 98, 62, 401, 293, 294, 111, 90, 401, 214, 471, 27, 902, 401, 744, 0)
vend1.sale <- c(vend1, rep(NA, 3))
vend2.sale <- c(vend2)
vend3.sale <- c(vend3, rep(NA, 2))
vendors = c('vend1', 'vend2', 'vend3')
data = data.frame(rbind(vend1.sale, vend2.sale, vend3.sale))
data$vendors = vendors
data
library(reshape2)
stacked.data = melt(data, id='vendors')
stacked.data
stacked.data = stacked.data[,-2]
stacked.data
boxplot.vendors = boxplot(vendors~value, data=stacked.data)
boxplot.vendors = boxplot(vendors+value, data=stacked.data)
require(ggplot2)
ggplot(data = stacked.data, aes(x=value, y=vendors)) + geom_boxplot(aes(fill=Label))
ggplot(data = stacked.data, aes(x=value, y=vendors)) + geom_boxplot(aes(fill=vendors))
ggplot(data = stacked.data, aes(x=vendors, y=value)) + geom_boxplot(aes(fill=vendors))
summary(stacked.data)
summary(vend1)
summary(vend2)
summary(vend3)
outlier(vend1)
summary(vend1)$Min.
min.vend1 = 173.5 - 1.5*(IQR(vend1))
max.vend1 = 432.8 + 1.5*(IQR(vend1))
min.vend2 = 64 - 1.5*(IQR(vend2))
max.vend2 = 401 + 1.5*(IQR(vend2))
min.vend3 = 349 - 1.5*(IQR(vend3))
max.vend3 = 502.5 + 1.5*(IQR(vend3))
hist(vend1)
hist(vend2)
hist(vend3)
library(prettyR)
lbls <- sort(levels(da99999.0001$MYVAR))
lbls <- (sub("^\\([0-9]+\\) +(.+$)", "\\1", lbls))
da99999.0001$MYVAR <- as.numeric(sub("^\\(0*([0-9]+)\\).+$", "\\1", da99999.0001$MYVAR))
da99999.0001$MYVAR <- add.value.labels(da99999.0001$MYVAR, lbls)
setwd("~/Desktop/Exercises/python-capstone")
library(plyr)
######################### Gun Laws Favor Opinion ##################################
data <- read.csv2("gunlaw_opinion.csv", sep = ",")
df <- data.frame(data)
View(df)
source('~/Desktop/Exercises/python-capstone/gun-control-script.R')
source('~/Desktop/Exercises/python-capstone/gun-control-script.R')
library(ggplot2)
year = df$Year
favor = df$GunLawFavor
ggplot(df, aes(x = year, y = favor, group=1)) + geom_line(aes(group=1))
mjdata <- read.csv2("mass_shootings_per_year.csv", sep =",")
mass <- data.frame(mjdata)
View(mjdata)
year = mass$Year
massshootings = mass$MassShootings
ggplot(mass, aes(x = year, y = massshootings, group=1)) + geom_line(aes(group=1))
############################## Mass Shootings vs Gun laws ##########################################
glms<- read.csv2("gunlaws_mass_shootings.csv", sep = ",")
View(glms)
year = glms$Year
favor = glms$GunLaw.Favor
mass = glms$MassShootings
yfavor <- as.numeric(as.character( favor ))
par(mar=c(5,4,4,5)+.1)
plot(year, mass, axes=F, ylim=c(0,max(mass)), xlab="", ylab="",type="l",
col="red", main="Mass Shootings vs Favor of Gun laws")
axis(2, ylim=c(0,max(mass)),col="red",lwd=2)
mtext(2,text="No of Mass Shootings",line=2.5)
par(new=T)
plot(year, yfavor, axes=F, xlab="", ylab="",
type="l",col='blue', main="",lwd=2)
axis(4, at=pretty(yfavor), paste0(pretty(yfavor) * 100, " %"),
ylim=c(0,max(yfavor)), col="blue", lwd=2)
mtext(4,text="Favor", line=2)
axis(1,pretty(range(year),10))
mtext("Year",side=1,col="black",line=2)
par(xpd=TRUE)
legend("topleft", legend=c("Favor","M. Shootings"),
lty=1, text.col=c("blue","red"),col=c("blue","red"), bty="n")
########################## Mother Jones Gun Mass Shootings ##############################
mjdata <- read.csv2("mj-1982-2016-US-mass-shootings.csv", sep = ",")
mjdf <- data.frame(mjdata)
View(mjdf)
mjyear <- mjdf$Year
victims <- mjdf$Total.victims
ggplot(mjdf, aes(x = mjyear, y = victims, group=1)) + geom_line(aes(group=1))
### total of gun shootings per year vs vicitms
table(xtabs(victims ~ mjyear, data = mjdf))
agmj <- aggregate(victims ~ mjyear, data=mjdf, FUN=sum)
agmj ['Mass.Shootings'] <- mjdata$MassShootings
colnames(agmj)[1] <- 'Year'
View(agmj)
#### Plotting Mass Shootings vs Amount of Victims
mjmass <- agmj$Mass.Shootings
mjvict <- agmj$victims
mjyear <- agmj$Year
par(mar=c(5,4,4,5)+.1)
plot(mjyear, mjmass, axes=F, ylim=c(0,max(mjmass)), xlab="", ylab="",type="l",
col="red", main="Mass Shootings vs No of Victims")
axis(2, ylim=c(0,max(mjmass)),col="red",lwd=2)
mtext(2,text="No of Mass Shootings",line=2.5)
par(new=T)
plot(mjyear, mjvict, axes=F, xlab="", ylab="",col='dark grey', type="l", lty=3, main="",lwd=2)
axis(4, at=pretty(mjvict),  ylim=c(0,max(mjvict)),
ylim=c(0,max(mjvict)), col="dark grey", lwd=2)
mtext(4,text="No of Victims", line=2)
axis(1,pretty(range(year),10))
mtext("Year",side=1,col="black",line=2)
par(xpd=TRUE)
legend("topleft", legend=c("Victims","M. Shootings"),
lty=c(3,1), text.col=c("dark grey","red"),col=c("dark grey","red"), bty="n")
########################### Correlation Gun laws vs Mass Shootings ################################
cor(mass, yfavor)
ran <- glms[glms$Year > 1988 & glms$Year < 2012,]
rfavor <-as.numeric(as.character( ran$GunLaw.Favor ))
cor(ran$MassShootings, rfavor)
agmj ['MassShootings'] <- mjdata$MassShootings
colnames(agmj)[1] <- 'Year'
View(agmj)
agmj ['MassShootings'] <- mjdata$MassShootings
ddply(mjdata, .(Year), summarize, massshootings=sum(year))
summary(mjdata$Year)
summary(mjdata)
aggregate(Year, data=mjdata, FUN=sum)
aggregate(mjdata$Year, data=mjdata, FUN=sum)
aggregate(mjdata$Year ~ mjdata$Year, data=mjdata, FUN=sum)
aggregate(mjdf$Year, data=mjdf, FUN=sum)
summary(mjdf$Year)
ddply(mjdf, .(Year), summarize, massshootings=sum(year))
ddply(mjdf, .(Year), summarize, sum=sum(count(
)))
ddply(mjdf, .(Year), summarize, sum=sum(count()))
ddply(mjdf, .(Year), summarize, sum=sum(count)
)
ddply(mjdf, .(Year), summarize, sum=sum(count))
ddply(mjdf, .(year), summarize, sum=sum(count))
table(xtabs(mjyear ~ mjyear, data = mjdf))
table(xtabs(mjyear ~ victims, data = mjdf))
nrow(mjdf$Year)
count(mjdf, "Year")
massfreq <- count(mjdf, "Year")
agmj ['MassShootings'] <- mjdf$freq
colnames(agmj)[1] <- 'Year'
View(agmj)
massfreq
agmj ['MassShootings'] <- massfreq$freq
colnames(agmj)[1] <- 'Year'
View(agmj)
mjmass <- agmj$MassShootings
mjvict <- agmj$victims
mjyear <- agmj$Year
par(mar=c(5,4,4,5)+.1)
plot(mjyear, mjmass, axes=F, ylim=c(0,max(mjmass)), xlab="", ylab="",type="l",
col="red", main="Mass Shootings vs No of Victims")
axis(2, ylim=c(0,max(mjmass)),col="red",lwd=2)
mtext(2,text="No of Mass Shootings",line=2.5)
par(new=T)
plot(mjyear, mjvict, axes=F, xlab="", ylab="",col='dark grey', type="l", lty=3, main="",lwd=2)
axis(4, at=pretty(mjvict),  ylim=c(0,max(mjvict)),
ylim=c(0,max(mjvict)), col="dark grey", lwd=2)
mtext(4,text="No of Victims", line=2)
axis(1,pretty(range(year),10))
mtext("Year",side=1,col="black",line=2)
par(xpd=TRUE)
legend("topleft", legend=c("Victims","M. Shootings"),
lty=c(3,1), text.col=c("dark grey","red"),col=c("dark grey","red"), bty="n")
aggregate()
prop.table(table(mjdf$Weapons.obtained.legally),1)
summary(mjdf$Weapons.obtained.legally)
gun.purchase <- mjdf$Weapons.obtained.legally
gun.purchase
summary(gun.purchase)
gun.purchase
head(gun.purchase)
gun.purchase <- as.character(gun.purchase)
gun.purchase[gun.purchase != 'Yes' || gun.purchase != 'No' || gun.purchase != 'Unknown'] <- 'Yes'
summary(gun.purchase)
gun.purchase
gun.purchase <- mjdf$Weapons.obtained.legally
summary(gun.purchase)
gun.purchase[!(gun.purchase %in% 'No') | !(gun.purchase %in% 'Unknown')] <- 'Yes'
gun.purchase
gun.purchase <- mjdf$Weapons.obtained.legally
gun.purchase
gun.purchase <- as.character(gun.purchase)
gun.purchase[gun.purchase != 'No' | gun.purchase != 'Unknown'] <- 'Yes'
gun.purchase <- as.factor(gun.purchase)
gun.purchase
gun.purchase <- mjdf$Weapons.obtained.legally
gun.purchase <- as.character(gun.purchase)
gun.purchase[gun.purchase != 'No' || gun.purchase != 'Unknown'] <- 'Yes'
gun.purchase <- as.factor(gun.purchase)
gun.purchase
gun.purchase <- mjdf$Weapons.obtained.legally
within(gun.purchase, levels(!No & !Unknown)[levels(gun.purchase) != "No" & levels(gun.purcahse) != "Unknown"] <- "Yes")
library(dplyr)
filter(mjdf != 'No' | mjdf != 'Unknown')
filter(mjdf, mjdf != 'No' | mjdf != 'Unknown')
gun.purchase == 'no'
gun.purchase == 'No'
gun.purchase <- mjdf$Weapons.obtained.legally
if (gun.purchase != 'No' | gun.purchase != 'Unkown') {
gun.purchase <- 'Yes'
}
gun.purchase
gun.purchase <- mjdf$Weapons.obtained.legally
gun.purchase['No'] <- CUZAO
gun.purchase['No'] <- 'CUZAO'
gun.purchase <- mjdf$Weapons.obtained.legally
gun.purchase['Weapons.obtained.legally'] <- mjdf$Weapons.obtained.legally
gun.purchase['Weapons.obtained.legally'] <- mjdf$Weapons.obtained.legally
gun.purchase['Weapons.obtained.legally'] <- mjdata$Weapons.obtained.legally
gun.purchase['Weapons.obtained.legally'] <- as.character(mjdata$Weapons.obtained.legally)
gun.purchase['GunsLegally'] <- as.character(mjdata$Weapons.obtained.legally)
gun.purchase <- mjdata$Weapons.obtained.legally
colnames(gun.purchase, "weapons.obtained.legally")
colnames(gun.purchase, prefix="weapons.obtained.legally")
gun.purchase
gun.purchase <- mjdata$Weapons.obtained.legally
colname(gun.purchase) <- "guns.obtained.legally"
colnames(gun.purchase) <- "guns.obtained.legally"
names(gun.purchase)[1] <- paste("guns.obtained.legally")
gun.purchase
gun.purchase <- mjdata$Weapons.obtained.legally
gun.purchase <- as.character(gun.purchase)
gun.purchase
names(gun.purchase)[1] <- paste("guns.obtained.legally")
gun.purchase
gun.purchase <- mjdata$Weapons.obtained.legally
gun.purchase <- as.character(gun.purchase)
if (gun.purchase != 'No' | gun.purchase != 'Unkown') {
gun.purchase <- 'Yes'
}
prop.table(table(mjdf$Weapons.obtained.legally),1)
gun.purchase <- mjdata$Weapons.obtained.legally
gun.purchase <- as.character(gun.purchase)
gun.purchase <- mjdata$Weapons.obtained.legally
gun.purchase <- as.character(gun.purchase)
names(gun.purchase)[1] <- paste("guns.obtained.legally")
gun.purchase <- d[!is.na(gun.purchase)]
gun.purchase <- gun.purchase[!is.na(gun.purchase)]
gun.purchase
gun.purchase <- mjdata$Weapons.obtained.legally
summary(gun.purchase)
gun.purchase
levels(gun.purchase)
combineLevels(gun.purchase, levs=!c('No', 'Unknown'), newLabel= "Yes")
library(combineLevels)
install.packages(combineLevels)
table(gun.purchase)
gun.purchase <- ifelse(gun.purchase != 'No' | gun.purchase != 'Unknown', 'Yes', gun.purchase)
gun.purchase
gun.purchase <- mjdata$Weapons.obtained.legally
gun.purchase <- ifelse(gun.purchase != 'No' || gun.purchase != 'Unknown', 'Yes', gun.purchase)
gun.purchase
gun.purchase <- ifelse(gun.purchase != 'No' && gun.purchase != 'Unknown', 'Yes', gun.purchase)
gun.purchase
gun.purchase <- mjdata$Weapons.obtained.legally
gun.purchase[]
gun.purchase['\nYes'] = 'Yes'
gun.purchase
gun.purchase['Yes ("some of the weapons were purchased legally and some of them may not have been") '] = 'Yes'
gun.purchase
table(gun.purchase)
?recorde
recorde
?recode
??recode
gun.purchase <- c(mjdata$Weapons.obtained.legally, mjdata$Year)
gun.purchase
gun.purchase <- cbind(mjdf$Weapons.obtained.legally, mjdata$Year)
gun.purchase
gun.purchase <- cbind(mjdata$Year, mjdf$Weapons.obtained.legally)
colnames(gun.purchase) <- c("Year", "Guns.obtained.legally")
gun.purchase
gun.purchase <- rbind(mjdata$Year, mjdf$Weapons.obtained.legally)
gun.purchase
gun.purchase <- cbind(mjdata$Year, mjdf$Weapons.obtained.legally)
colnames(gun.purchase) <- c("Year", "Guns.obtained.legally")
gun.purchase
gun.purchase$Weapons.obtained.legally == 2
gun.purchase$Gun.obtained.legally == 2
gun.purchase$Guns.obtained.legally == 2
gun.purchase <- cbind(mjdata$Year, mjdf$Weapons.obtained.legally, mjdf$Prior.signs.of.possible.mental.illness)
colnames(gun.purchase) <- c("Year", "Guns.obitained.legally", "Mental.health.issues")
gun.purchase
gun.purchase <- cbind(mjdata$Year, mjdf$Weapons.obtained.legally, mjdf$Prior.signs.of.possible.mental.illness)
colnames(gun.purchase) <- c("Year", "Guns.obtained.legally", "Mental.health.issues")
summary(gun.purchase)
summary(gun.purchase$Guns.obtained.legally)
summary(gun.purchase[,Guns.obtained.legally])
summary(gun.purchase[Guns.obtained.legally])
gun.purchase <- cbind(mjdata$Year, mjdf$Weapons.obtained.legally, mjdf$Prior.signs.of.possible.mental.illness)
colnames(gun.purchase) <- c("Year", "legally", "MHIssues")
gun.purchase
gun.purchase$legally
gun.purchase["legally"]
labels=c('Yes','No','Unknown', 'Yes', 'Yes', 'Yes'))
gun.purchase <- mjdf$Weapons.obtained.legally
gun.purchase$Guns.obtained.legally <- factor(gun.purchase$Guns.obtained.legally, levels=c(1,2,3,4,5,6),
labels=c('Yes','No','Unknown', 'Yes', 'Yes', 'Yes'))
gun.purchase
levels(gun.purchase)
levels(gun.purchase) <- c("Yes", "No", "Unknown", "Yes", "Yes")
levels(gun.purchase) <- c("Yes", "No", "Unknown", "Yes", "Yes", "Yes")
gun.purchase
summary(gun.purchase)
prop.table(summary(gun.purchase))
prop.table(summary(race))
race <- mjdf$Race
prop.table(summary(race))
levels(race)
levels(race) <- c("Asian", "Black", "Black", "Latino", "Native American", "Other & Unclear",
"Other & Unclear", "White", "White", "White" )
levels(race)
prop.table(summary(race))
mental <- mjdf$Prior.signs.of.possible.mental.illness
levels(mental)
levels(mental) <- c("No", "Unclear", "Unknown", "Unknown", "Yes")
levels(mental) <- c("No", "Unclear", "Unclear" "Unknown", "Unknown", "Yes")
levels(mental) <- c("No", "Unclear", "Unclear", "Unknown", "Unknown", "Yes")
levels(mental)
prop.table(summary(mental))
library(plotrix)
install.packages(plotrix)
install.packages("plotrix")
library(plotrix)
race
summary(race)
ddply(race, .(race), summarize, count=sum(race))
race$white
race["white"]
race["White"]
race[White]
race$White
counts <- table(race)
counts
labs <- paste(race, counts)
pie(counts, labels = labs)
summary(race)
levels(race)
counts
labs
round(counts/sum(counts)*100)
round(counts/sum(counts)*100)
level(races)
levels(race)
lbls <- levels(race)
pct <- round(counts/sum(counts)*100)
lbls <- levels(race)
pct <- round(counts/sum(counts)*100)
lbls <- paste(lbls, pct)
lbls <- pate(lbls, "%", sep="")
lbls <- paste(lbls, "%", sep="")
counts <- table(race)
lbls <- levels(race)
pct <- round(counts/sum(counts)*100)
lbls <- paste(lbls, pct)
lbls <- paste(lbls, "%", sep="")
pie3d(counts, labels=lbls, explode=0.1, main="Race")
pie3D(counts, labels=lbls, explode=0.1, main="Race")
?pie3D
pos <- pie3D(counts, labels=lbls, explode=0.1, main="Race", labelpos =)
pos <- pie3D(counts, labels=lbls, explode=0.1, main="Race")
pos[4] <- 4.8
pie3D(counts, labels=lbls, explode=0.1, main="Race", labelpos = pos)
pos
